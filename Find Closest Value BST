"""
Given a string containing integers separated with a space construct a binary tree and find the least absolute difference between any node value of the BST and the given integer.
"""

import sys
class newNode:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None

def inOrder(root):
    l = []
    if root != None:
        inOrder(root.left)
        print(root.data, end=" ")
        inOrder(root.right)


def insertLevelOrder(arr, i, n):
    root = None
    if i < n:
        root = newNode(arr[i])
        root.left = insertLevelOrder(arr, 2 * i + 1, n)
        root.right = insertLevelOrder(arr, 2 * i + 2, n)

    return root
def preorder(root, v):
    if root is None:
        return
    v.append(root.data)
    preorder(root.left, v)
    preorder(root.right, v)

arr = [int(x) for x in input().split()]
k = int(input())
v = []
n = len(arr)
root = None
root = insertLevelOrder(arr, 0, n)
preorder(root, v)
min_diff = sys.maxsize
n = len(v)
for i in range(n):
    x = abs(k - v[i])
    if min_diff > x:
        min_diff = x
print(min_diff)
